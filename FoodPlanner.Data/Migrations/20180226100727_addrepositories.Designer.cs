// <auto-generated />
using FoodPlanner.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FoodPlanner.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180226100727_addrepositories")]
    partial class addrepositories
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoodPlanner.Domain.CategoryGrocery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisplayName");

                    b.Property<string>("SystemName");

                    b.HasKey("Id");

                    b.ToTable("CategoryGrocery");
                });

            modelBuilder.Entity("FoodPlanner.Domain.Grocery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryGroceryId");

                    b.Property<string>("Description");

                    b.Property<string>("Manufacturer");

                    b.Property<string>("Name");

                    b.Property<int?>("RecipeId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryGroceryId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Groceries");
                });

            modelBuilder.Entity("FoodPlanner.Domain.PieceOfJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("OrderNumber");

                    b.Property<int>("RecipeId");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("PieceOfJob");
                });

            modelBuilder.Entity("FoodPlanner.Domain.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LongDescription");

                    b.Property<string>("Name");

                    b.Property<string>("ShortDescription");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("FoodPlanner.Domain.RecipeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ImageThumbnailUrl");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("ReferenceInfo");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("RecipeInfos");
                });

            modelBuilder.Entity("FoodPlanner.Domain.RecipeInfoRecipe", b =>
                {
                    b.Property<int>("RecipeId");

                    b.Property<int>("RecipeInfoId");

                    b.HasKey("RecipeId", "RecipeInfoId");

                    b.HasIndex("RecipeInfoId");

                    b.ToTable("RecipeInfoRecipe");
                });

            modelBuilder.Entity("FoodPlanner.Domain.Grocery", b =>
                {
                    b.HasOne("FoodPlanner.Domain.CategoryGrocery", "CategoryGrocery")
                        .WithMany()
                        .HasForeignKey("CategoryGroceryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FoodPlanner.Domain.Recipe")
                        .WithMany("Groceries")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("FoodPlanner.Domain.PieceOfJob", b =>
                {
                    b.HasOne("FoodPlanner.Domain.Recipe")
                        .WithMany("PiecesOfJobs")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FoodPlanner.Domain.RecipeInfoRecipe", b =>
                {
                    b.HasOne("FoodPlanner.Domain.Recipe", "Recipe")
                        .WithMany("RecipeInfoRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FoodPlanner.Domain.RecipeInfo", "RecipeInfo")
                        .WithMany("RecipeInfoRecipes")
                        .HasForeignKey("RecipeInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
